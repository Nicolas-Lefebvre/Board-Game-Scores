"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.metrics = void 0;
const constants_1 = require("../constants");
exports.metrics = {
    firstPaint: {
        label: 'First Paint',
        type: constants_1.MetricTypes.Duration,
    },
    fullyLoaded: {
        label: 'Fully Loaded',
        type: constants_1.MetricTypes.Duration,
    },
    backEndTime: {
        label: 'BackEnd Time',
        type: constants_1.MetricTypes.Duration,
    },
    domContentLoadedTime: {
        label: 'DOM Content Loaded Time',
        type: constants_1.MetricTypes.Duration,
    },
    domInteractiveTime: {
        label: 'DOM Interactive Time',
        type: constants_1.MetricTypes.Duration,
    },
    domainLookupTime: {
        label: 'Domain Lookup Time',
        type: constants_1.MetricTypes.Duration,
    },
    frontEndTime: {
        label: 'FrontEnd Time',
        type: constants_1.MetricTypes.Duration,
    },
    pageDownloadTime: {
        label: 'Page Download Time',
        type: constants_1.MetricTypes.Duration,
    },
    pageLoadTime: {
        label: 'Page Load Time',
        type: constants_1.MetricTypes.Duration,
    },
    redirectionTime: {
        label: 'Redirection Time',
        type: constants_1.MetricTypes.Duration,
    },
    serverConnectionTime: {
        label: 'Server Connection Time',
        type: constants_1.MetricTypes.Duration,
    },
    serverResponseTime: {
        label: 'Server Response Time',
        type: constants_1.MetricTypes.Duration,
    },
    firstContentfulPaint: {
        label: 'First Contentful Paint',
        type: constants_1.MetricTypes.Duration,
    },
    rumSpeedIndex: {
        label: 'RUM Speed Index',
        type: constants_1.MetricTypes.Duration,
    },
    firstVisualChange: {
        label: 'First Visual Change',
        type: constants_1.MetricTypes.Duration,
    },
    lastVisualChange: {
        label: 'Last Visual Change',
        type: constants_1.MetricTypes.Duration,
    },
    perceptualSpeedIndex: {
        label: 'Perceptual SpeedIndex',
        type: constants_1.MetricTypes.Duration,
    },
    speedIndex: {
        label: 'Speed Index',
        type: constants_1.MetricTypes.Duration,
    },
    visualComplete85: {
        label: 'Visual Complete 85',
        type: constants_1.MetricTypes.Duration,
    },
    visualComplete95: {
        label: 'Visual Complete 95',
        type: constants_1.MetricTypes.Duration,
    },
    visualComplete99: {
        label: 'Visual Complete 99',
        type: constants_1.MetricTypes.Duration,
    },
};
//# sourceMappingURL=metrics.js.map