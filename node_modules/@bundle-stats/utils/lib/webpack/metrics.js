"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.metrics = void 0;
const file_types_1 = require("../config/file-types");
const types_1 = require("./types");
const constants_1 = require("../constants");
exports.metrics = {
    [types_1.Metric.BUNDLE_SIZE]: {
        label: 'Bundle Size',
        description: 'The total file size of the assets generated or processed by the bundler',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: constants_1.MetricTypes.FileSize,
    },
    [types_1.Metric.INITIAL_SIZE_JS]: {
        label: 'Initial JS',
        description: 'The total file size of the JavaScript initial chunks',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: constants_1.MetricTypes.FileSize,
    },
    [types_1.Metric.INITIAL_SIZE_CSS]: {
        label: 'Initial CSS',
        description: 'The total file size of the CSS initial chunks',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: constants_1.MetricTypes.FileSize,
    },
    [types_1.Metric.CACHE_INVALIDATION]: {
        label: 'Cache Invalidation',
        description: 'The ratio between the total of the changed assets and the total file size(Bundle Size)',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: constants_1.MetricTypes.Percentage,
        biggerIsBetter: null,
        skipDelta: true,
    },
    [types_1.Metric.CHUNK_COUNT]: {
        label: 'Chunks',
        description: 'The total number of chunks generated by the bundler',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: constants_1.MetricTypes.Numeric,
        biggerIsBetter: null,
    },
    [types_1.Metric.ASSET_COUNT]: {
        label: 'Assets',
        description: 'Total number of assets generated or produced by the bundler',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: constants_1.MetricTypes.Numeric,
        biggerIsBetter: null,
    },
    [types_1.Metric.MODULE_COUNT]: {
        label: 'Modules',
        description: 'The total number of bundled modules',
        url: 'https://relative-ci.com/documentation/metrics-and-data#modules-1',
        type: constants_1.MetricTypes.Numeric,
        biggerIsBetter: null,
    },
    [types_1.Metric.DUPLICATE_MODULES_COUNT]: {
        label: 'Duplicate Modules',
        description: 'The total number of modules that belong to more than one chunk',
        url: 'https://relative-ci.com/documentation/metrics-and-data#modules-1',
        type: constants_1.MetricTypes.Numeric,
        biggerIsBetter: false,
    },
    [types_1.Metric.DUPLICATE_CODE]: {
        label: 'Duplicate Code',
        description: 'The percentage of total duplicate module size from the total module size',
        url: 'https://relative-ci.com/documentation/metrics-and-data#modules-1',
        type: constants_1.MetricTypes.Percentage,
        biggerIsBetter: false,
    },
    [types_1.Metric.PACKAGE_COUNT]: {
        label: 'Packages',
        description: 'The total number of bundled packages',
        url: 'https://relative-ci.com/documentation/metrics-and-data#packages',
        type: constants_1.MetricTypes.Numeric,
        biggerIsBetter: false,
    },
    [types_1.Metric.DUPLICATE_PACKAGES_COUNT]: {
        label: 'Duplicate Packages',
        description: 'The total number of duplicate bundled packages',
        url: 'https://relative-ci.com/documentation/metrics-and-data#packages',
        type: constants_1.MetricTypes.Numeric,
        biggerIsBetter: false,
    },
    sizes: {
        [types_1.Metric.TOTAL_SIZE_JS]: {
            label: file_types_1.FILE_TYPE_LABELS.JS,
            type: constants_1.MetricTypes.FileSize,
        },
        [types_1.Metric.TOTAL_SIZE_CSS]: {
            label: file_types_1.FILE_TYPE_LABELS.CSS,
            type: constants_1.MetricTypes.FileSize,
        },
        [types_1.Metric.TOTAL_SIZE_IMG]: {
            label: file_types_1.FILE_TYPE_LABELS.IMG,
            type: constants_1.MetricTypes.FileSize,
        },
        [types_1.Metric.TOTAL_SIZE_MEDIA]: {
            label: file_types_1.FILE_TYPE_LABELS.MEDIA,
            type: constants_1.MetricTypes.FileSize,
        },
        [types_1.Metric.TOTAL_SIZE_FONT]: {
            label: file_types_1.FILE_TYPE_LABELS.FONT,
            type: constants_1.MetricTypes.FileSize,
        },
        [types_1.Metric.TOTAL_SIZE_HTML]: {
            label: file_types_1.FILE_TYPE_LABELS.HTML,
            type: constants_1.MetricTypes.FileSize,
        },
        [types_1.Metric.TOTAL_SIZE_OTHER]: {
            label: file_types_1.FILE_TYPE_LABELS.OTHER,
            type: constants_1.MetricTypes.FileSize,
        },
    },
};
//# sourceMappingURL=metrics.js.map